// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package helperTypes

import "reflect"

var Types = map[string]reflect.Type{
	"TypeGenericString": reflect.TypeOf((*TypeGenericString)(nil)).Elem(),
	"TypeGenericStringArray": reflect.TypeOf((*TypeGenericStringArray)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"Contains": reflect.ValueOf(Contains),
	"FindInMap": reflect.ValueOf(FindInMap),
	"IsArray": reflect.ValueOf(IsArray),
	"IsInt": reflect.ValueOf(IsInt),
	"IsMap": reflect.ValueOf(IsMap),
	"IsSlice": reflect.ValueOf(IsSlice),
	"IsString": reflect.ValueOf(IsString),
	"ReflectInt": reflect.ValueOf(ReflectInt),
	"ReflectString": reflect.ValueOf(ReflectString),
	"ReflectStrings": reflect.ValueOf(ReflectStrings),
	"Sprintf": reflect.ValueOf(Sprintf),
	"ToLower": reflect.ValueOf(ToLower),
	"ToString": reflect.ValueOf(ToString),
	"ToUpper": reflect.ValueOf(ToUpper),
}

var Variables = map[string]reflect.Value{
	"GetHelpers": reflect.ValueOf(&GetHelpers),
}

var Consts = map[string]reflect.Value{
}

