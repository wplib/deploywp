// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package helperTypes

import "reflect"

var Types = map[string]reflect.Type{
	"TypeGenericString": reflect.TypeOf((*TypeGenericString)(nil)).Elem(),
	"TypeGenericStringArray": reflect.TypeOf((*TypeGenericStringArray)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"HelperContains": reflect.ValueOf(HelperContains),
	"HelperFindInMap": reflect.ValueOf(HelperFindInMap),
	"HelperGrep": reflect.ValueOf(HelperGrep),
	"HelperGrepArray": reflect.ValueOf(HelperGrepArray),
	"HelperIsArray": reflect.ValueOf(HelperIsArray),
	"HelperIsInt": reflect.ValueOf(HelperIsInt),
	"HelperIsMap": reflect.ValueOf(HelperIsMap),
	"HelperIsSlice": reflect.ValueOf(HelperIsSlice),
	"HelperIsString": reflect.ValueOf(HelperIsString),
	"HelperSprintf": reflect.ValueOf(HelperSprintf),
	"HelperToLower": reflect.ValueOf(HelperToLower),
	"HelperToString": reflect.ValueOf(HelperToString),
	"HelperToUpper": reflect.ValueOf(HelperToUpper),
	"ReflectBool": reflect.ValueOf(ReflectBool),
	"ReflectBoolArg": reflect.ValueOf(ReflectBoolArg),
	"ReflectByteArray": reflect.ValueOf(ReflectByteArray),
	"ReflectString": reflect.ValueOf(ReflectString),
	"ReflectStrings": reflect.ValueOf(ReflectStrings),
}

var Variables = map[string]reflect.Value{
	"GetHelpers": reflect.ValueOf(&GetHelpers),
}

var Consts = map[string]reflect.Value{
	"HelperPrefix": reflect.ValueOf(HelperPrefix),
}

