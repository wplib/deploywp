// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package helperGit

import "reflect"

var Types = map[string]reflect.Type{
	"CloneOptions": reflect.TypeOf((*CloneOptions)(nil)).Elem(),
	"Commit": reflect.TypeOf((*Commit)(nil)).Elem(),
	"Dir": reflect.TypeOf((*Dir)(nil)).Elem(),
	"Filepath": reflect.TypeOf((*Filepath)(nil)).Elem(),
	"Filepaths": reflect.TypeOf((*Filepaths)(nil)).Elem(),
	"HelperGit": reflect.TypeOf((*HelperGit)(nil)).Elem(),
	"LogOptions": reflect.TypeOf((*LogOptions)(nil)).Elem(),
	"PullOptions": reflect.TypeOf((*PullOptions)(nil)).Elem(),
	"ReadableName": reflect.TypeOf((*ReadableName)(nil)).Elem(),
	"Reference": reflect.TypeOf((*Reference)(nil)).Elem(),
	"State": reflect.TypeOf((*State)(nil)).Elem(),
	"Status": reflect.TypeOf((*Status)(nil)).Elem(),
	"Tag": reflect.TypeOf((*Tag)(nil)).Elem(),
	"Tagname": reflect.TypeOf((*Tagname)(nil)).Elem(),
	"TypeExecCommand": reflect.TypeOf((*TypeExecCommand)(nil)).Elem(),
	"TypeGit": reflect.TypeOf((*TypeGit)(nil)).Elem(),
	"Url": reflect.TypeOf((*Url)(nil)).Elem(),
}

var Functions = map[string]reflect.Value{
	"HelperNewGit": reflect.ValueOf(HelperNewGit),
	"ReflectHelperGit": reflect.ValueOf(ReflectHelperGit),
	"ReflectState": reflect.ValueOf(ReflectState),
}

var Variables = map[string]reflect.Value{
	"GetHelpers": reflect.ValueOf(&GetHelpers),
}

var Consts = map[string]reflect.Value{
	"HelperPrefix": reflect.ValueOf(HelperPrefix),
	"LockMsg": reflect.ValueOf(LockMsg),
	"LockTag": reflect.ValueOf(LockTag),
}

